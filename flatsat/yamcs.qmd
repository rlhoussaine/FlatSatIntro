
# Yamcs Overview


## Introduction

[Yamcs](https://yamcs.org/) is an open-source software for real-time mission control, providing tools for spacecraft and ground system operations.

## Key Features
- **Telemetry Processing**: Real-time telemetry data processing.
- **Telecommands**: Command satellites or spacecraft.
- **Alarms & Notifications**: Configurable alarms based on thresholds.
- **Data Replay**: Allows mission data replay.
- **Standards Compliance**: Supports CCSDS, CFDP, and XTCE standards.

## Getting Started
To set up Yamcs, follow the [Getting Started Guide](https://yamcs.org/getting-started) covering installation, configuration, and basic usage.

## Python Client
The [Python Yamcs Client](https://docs.yamcs.org/python-yamcs-client/) supports telemetry retrieval, commanding, and historical data access via Python for custom mission applications.

## Extensions and Support
Yamcs is Java-based and extendable. Space Applications Services offers professional support, custom development, and training.

## Flatsat set up

The current FlatSat setup is progressively integrating direct CAN messaging with YAMCS, including the capability to transmit commands via the radio link.  

![](images/yamcs.png)

YAMCS, as the ground software, generates CAN-TCs to be delivered over the CAN bus. This process requires a mission database to define PUS services, which in our case is structured using the [SCOS-2000](https://redmine.oas.inaf.it/attachments/download/595/egos-mcs-s2k-icd-0001-version67DraftA%20mib.pdf) format.  

Simultaneously, a library is being developed based on the [YAMCS Python client](https://docs.yamcs.org/python-yamcs-client/). This library aims to provide a more user-friendly interface for developing test scripts.